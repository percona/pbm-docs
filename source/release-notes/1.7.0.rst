.. _PBM-1.7.0:

================================================================================
*Percona Backup for MongoDB* 1.7.0
================================================================================

:Date:  , 2022
:Installation: `Installing Percona Backup for MongoDB <https://www.percona.com/doc/percona-backup-mongodb/installation.html>`_

Percona Backup for MongoDB is a distributed, low-impact solution for consistent backups of MongoDB
sharded clusters and replica sets. This is a tool for creating consistent backups
across a MongoDB sharded cluster (or a single replica set), and for restoring
those backups to a specific point in time. The project was
inspired by (and intends to replace) the Percona-Lab/mongodb_consistent_backup tool.

Release highlights
======================

* Support for :ref:`physical backups <backup-types>` in |PSMDB| starting from versions 4.2.15-16 and 4.4.6-8 and higher. Physical backups drastically speed up backup performance for large databases (several terabytes). This is a technical preview feature. 
* :ref:`Oplog replay <oplog-replay>` from the arbitrary start time. This reduces Recovery Point Objective (RPO) when database is recovered from storage-level backup, for example LVM-snapshots.
* Ability to configure compression method and level for |PITR| chunks and compression level for backups.
* Ability to configure the number of S3 multipart upload chunks to comply with various S3-compatible storage provider requirements. 
* Ability to configure the number of upload retries. This facilitates data upload in case of unstable network connection.
  
Breaking Changes
================

To use physical backups with filesystem-based backup storage, the `mongod` user must be the owner of the backup directory. 

New Features
================================================================================

* :jirabug:`PBM-734`: Add the config option to set :ref:`debug log levels <s3-debug-log-levels>` for S3  requests
* :jirabug:`PBM-742`: Add the ability to :ref:`replay oplog <oplog-replay>` from arbitrary start time. This reduces Recovery Point Objective (RPO) when database is recovered from storage-level backup, for example LVM-snapshots.
* :jirabug:`PBM-805`: Implement physical backups



Improvements
================================================================================

* :jirabug:`PBM-680`: :ref:`Skip TLS verification <s3-skip-TLS>` for object storage. This can be useful for private object storage with self-signed certificates.
* :jirabug:`PBM-770`: Support configurable compression method/level for |PITR| chunks (Thanks to Damiano Albani for reporting this issue and contributing to it)
* :jirabug:`PBM-764`: Support Zstandard compression format (Thanks to Damiano Albani for reporting this issue and contributing to it)
* :jirabug:`PBM-750`: Make max number of S3 upload parts configurable (Thanks to Damiano Albani for reporting this issue and contributing to it)
* :jirabug:`PBM-777`: Expand/fix the configuration API to support compression method for |PITR| chunks (Thanks to Damiano Albani for reporting and contributing to this issue)
* :jirabug:`PBM-756`: Add the ability to configure :ref:`logging levels for S3 requests <s3-debug-log-levels>` to debug issues with object storage (Thanks to Damiano Albani for reporting this issue and contributing to it)
* :jirabug:`PBM-577`: It is now possible to choose an S3 storage class for granular control over various S3 tiers (Thanks to Damiano Albani for the contribution)



Bugs Fixed
================================================================================

* :jirabug:`PBM-721`: Fixed a bug where an upload of the backup to S3-storage was failing due to unstable network connection. |PBM| can now be configured to retry the upload with flexible timeouts.
* :jirabug:`PBM-773`: Check distributed transactions on all participating shards to avoid commit timestamp inconsistency upon restore



.. include:: ../.res/replace.txt
